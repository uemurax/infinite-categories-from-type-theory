#+TITLE: $\infty$-Categories from Type Theory
#+AUTHOR: Taichi Uemura
#+OPTIONS: toc:nil H:2
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [14pt]
#+BEAMER_HEADER: \setbeamertemplate{navigation symbols}{}
#+LATEX_HEADER: \usepackage[euler-digits]{eulervm}
#+LATEX_HEADER: \usepackage{dutchcal}
#+BEAMER_HEADER: \usefonttheme{professionalfonts}
#+LATEX_HEADER: \usepackage[all]{xy}
#+LATEX_HEADER: \usepackage{fontspec,fontawesome}

* Introduction

** Why $\infty$-categories?
*** The Univalence Axiom
    :PROPERTIES:
    :BEAMER_ENV: block
    :BEAMER_ACT: <2->
    :END:
**** The Univalence Axiom
     :PROPERTIES:
     :BEAMER_ENV: onslide*
     :BEAMER_ACT: <2>
     :END:
- Equivalence between equality and equivalence
  \[ (A = B) \simeq (A \simeq B). \]
- $A = B$ is an inductive type.
  - /Path induction/
  - rewrite tactic
- $A \simeq B :\equiv
  \Sigma (f : A \to B). (\Sigma (g : B \to A). g \circ f \sim \mathbf{id})
  \times (\Sigma (h : B \to A). f \circ h \sim \mathbf{id})$
**** Why the Univalence Axiom?
     :PROPERTIES:
     :BEAMER_ENV: onslide*
     :BEAMER_ACT: <3-5>
     :END:
- Human ::
  Can identify equivalent objects easily.
- Computer :: @@beamer:<4->@@
  *TYPE ERROR*
***** If the universe is univalent
      :PROPERTIES:
      :BEAMER_ENV: onslide
      :BEAMER_ACT: <5>
      :END:
With the Univalence Axiom, computers can:
- treat an equivalence as an equality and
- recover the original function if necessary.
**** Example
     :PROPERTIES:
     :BEAMER_ENV: onslide*
     :BEAMER_ACT: <6->
     :END:
- $\mathbcal{Set}$ ::
  Only $(0 = 0) \simeq (0 \simeq 0)$ and
  $(1 = 1) \simeq (1 \simeq 1)$ hold.
- $\mathcal{Gpd}$ ::
  For discrete groupoids $A$ and $B$,
  $(A = B) \simeq (A \simeq B)$ holds.
- $2$-$\mathcal{Gpd}$ ::
  For $1$-groupoids $A$ and $B$,
  $(A = B) \simeq (A \simeq B)$ holds.
- $\infty$-$\mathcal{Gpd}$ :: @@beamer:<7->@@
  For *any* $\infty$-groupoids $A$ and $B$,
  $(A = B) \simeq (A \simeq B)$ holds.

** $\infty$-Categorical semantics
*** Intensional DTT and $\infty$-LCCC
Is there an ($\infty$-)equivalence between
- the ($\infty$-)category of *intensional Martin-L\ouml{}f type theories* and
- the ($\infty$-)category of *locally cartesian closed $\infty$-categories*?
*** HoTT and $\infty$-topos
    :PROPERTIES:
    :BEAMER_ACT: <2->
    :END:
Is there an ($\infty$-)equivalence between
- the ($\infty$-)category of *homotopy type theories* and
- the ($\infty$-)category of *$\infty$-topoi*?

* $\infty$-Categories
** Outline
#+TOC: headlines [currentsection]
** $\infty$-Categories
There are many definitions of $\infty$-categories.
- *@@beamer:<2->@@Quasicategories*
- Simplicially enriched categories
- Topologically enriched categories
- Segal categories
- Complete Segal spaces
- $A_{\infty}$-Categories
** Quasicategories
*** Definition of quasicategory
    :PROPERTIES:
    :BEAMER_ENV: onslide*
    :BEAMER_ACT: <1>
    :END:
**** Quasicategory
     :PROPERTIES:
     :BEAMER_ENV: definition
     :END:
A /quasicategory/ is a simplicial set $K$
which has the following property:
- for any $0 < i < n$,
  any map $f_{0} : \Lambda^{n}_{i} \to K$
  admits an extension $f : \Delta^{n} \to K$.
  #+ATTR_LATEX: :mode math :environment xymatrix :math-arguments @M=8pt
  | \Lambda^{n}_{i} \ar[r]^-{f_{0}} \ar@{>->}[d] | K |
  | \Delta^{n} \ar@{.>}[ur]_-{f}                 |   |
*** Example of inner filling
    :PROPERTIES:
    :BEAMER_ENV: onslide*
    :BEAMER_ACT: <2->
    :END:
**** Examples
***** Composition
      :PROPERTIES:
      :BEAMER_ENV: onslide*
      :BEAMER_ACT: <2-10>
      :END:
- $0 < i = 1 < 2$ ::
  #+ATTR_LATEX: :mode inline-math :environment xymatrix :math-arguments @R=4pt
  | x \ar@{-}[dr] \only<3->{\ar@{.}[rr]} |           | \only<3->{g \only<4->{'} \ar@{.>}[rr]} |           | z |
  |                                      | e \ar[dr] | \only<3->{\sigma \only<4->{'}}         | f \ar[ur] |   |
  |                                      |           | y \ar@{-}[ur]                          |           |   |
- $0 < i = 1 < 3$ :: @@beamer:<5->@@
  #+ATTR_LATEX: :mode inline-math :environment xymatrix :math-arguments @R=4pt
  | x \ar@{-}[dd] \ar@{-}[dr] \ar@{-}[rr] |                                                     | g' \ar[rr]                                                     |                                                                | z                   |
  |                                       | g \ar[dddrrr]                                       | \sigma' \only<6>{\ar@{.}[dll] \ar@{.}[r] \ar@{.}[u]}           | f \ar[ur]                                                      |                     |
  | e \ar[dd]                             | \sigma \only<6>{\ar@{.}[l] \ar@{.}[ddr] \ar@{.}[u]} | \only<10->{\Gamma \ar@{.}[l] \ar@{.}[d] \ar@{.}[r] \ar@{.}[u]} | \only<8->{\tau} \only<9>{\ar@{.}[ull] \ar@{.}[r] \ar@{.}[uul]} | \mathbf{id} \ar[uu] |
  |                                       |                                                     | \mathbf{id} \only<6>{\ar@{.}[d] \ar@{.}[urr] \ar@{.}[uur]}     |                                                                |                     |
  | y \ar@{-}[rr] \ar@{-}[uuurrr]         |                                                     | f \ar[rr]                                                      |                                                                | z \ar@{-}[uu]       |
***** Associativity
      :PROPERTIES:
      :BEAMER_ENV: onslide*
      :BEAMER_ACT: <11->
      :END:
Given edges
#+ATTR_LATEX: :mode inline-math :environment xymatrix
| x \ar[r]^-{e} | y \ar[r]^-{f} | z \ar[r]^-{g} | w, |
there are two ways to compose them:
#+BEGIN_CENTER
#+ATTR_LATEX: :mode inline-math :environment xymatrix :math-arguments @R=10pt
| x \ar[dr] \ar[rrr] \ar[drr] |          |           | w |
|                             | y \ar[r] | z \ar[ur] |   |
and
#+ATTR_LATEX: :mode inline-math :environment xymatrix :math-arguments @R=10pt
| x \ar[dr] \ar[rrr] |                   |           | w |
|                    | y \ar[r] \ar[urr] | z \ar[ur] |   |
#+END_CENTER
#+BEAMER: \onslide<12->{
But we can show they are homotopic
using the filling condition for $n = 3$ and $i = 1$ or $2$.
#+BEAMER: }
* $\infty$-Categories from Type Theory
** Outline
#+TOC: headlines [currentsection]
** Are 1-simplexes functions?
For a dependent type theory $\mathcal{T}$,
define a simplicial set $S(\mathcal{T})$ as:
*** 0 to 2
    :PROPERTIES:
    :BEAMER_ENV: onslide*
    :BEAMER_ACT: <1>
    :END:
- $0$-simplexes are the types.
- $1$-simplexes are the functions $f : A \to B$.
- $2$-simplexes are the homotopies $\sigma : g \circ f \sim h$.
  #+BEGIN_LATEX
  \[\xymatrix{
   A \ar[dr]_-{f} \ar[rr]^-{h} & \ar@{}[d]|-{\sigma} & C \\
    & B \ar[ur]_-{g} &  \\
  }\]
  #+END_LATEX
*** 3 to $\infty$
    :PROPERTIES:
    :BEAMER_ENV: onslide*
    :BEAMER_ACT: <2->
    :END:
- $3$-simplexes are the homotopies
  #+BEGIN_CENTER
  from
  $\xymatrix{x \ar[d]_-{e} \ar[dr]|-{h} \ar[r]^-{l} & w \\
   y \ar[r]_-{f} \ar@{}[ur]|(0.25){\alpha}|(0.75){\beta} & z \ar[u]_-{g} \\}$
  to
  $\xymatrix{x \ar[d]_-{e} \ar[r]^-{l} \ar@{}[dr]|(0.25){\gamma}|(0.75){\delta}& w \\
   y \ar[r]_-{f} \ar[ur]|-{k} & z. \ar[u]_-{g} \\}$
  #+END_CENTER
- @@beamer:<3->@@
  $4$-simplexes are the homotopies from \faRocket{} to \faSpaceShuttle{}.
#+BEAMER: \onslide<3->{
It is hard to write down what $n$-simplexes are in general.
#+BEAMER: }
* COMMENT Misc
** Fontawesome
We use [[http://www.ctan.org/pkg/fontawesome][fontawesome.sty]] to display emoji.
In Arch Linux or similar system, you can get it from AUR.

#+BEGIN_SRC shell
  yaourt -S fontawesome.sty
#+END_SRC

** Local variables
# Local Variables:
# org-latex-pdf-process: ("lualatex -draftmode -interaction nonstopmode %b" "bibtex %b" "lualatex -draftmode -interaction nonstopmode %b" "lualatex %b")
# org-beamer-environments-extra: (("onslide" "s" "\\onslide%a{" "}") ("onslide*" "*" "\\onslide*%a{" "}") ("onslide+" "+" "\\onslide+%a{" "}"))
# org-latex-table-matrix-macros: (("xymatrix" . "\\\\"))
# End:
